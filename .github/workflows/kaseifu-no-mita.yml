name: I am Mita, Your Housekeeper # 家政婦のミタ

on:
  schedule:
    - cron: '0 23 * * TUE' # Runs at 08:00 Tokyo time every Wednesday ⌚
    - cron: '0 23 27 * *' # Runs at 08:00 Tokyo time on day-of-month 28 🗓️

  workflow_dispatch:
    inputs:
      prune_tags:
        description: 'Prune old releases'
        type: boolean
        default: false
      prune_pkgs:
        description: 'Prune untagged packages'
        type: boolean
        default: false

jobs:
  prune_old_releases:
    if: github.event.schedule == '0 23 * * TUE' || github.event.inputs.prune_tags == 'true'
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Prune old releases
        run: ./util/prunetags.sh
        env:
          GH_TOKEN: ${{ github.token }}

  prune_untagged_pkgs:
    if: github.event.schedule == '0 23 27 * *' || github.event.inputs.prune_pkgs == 'true'
    runs-on: ubuntu-22.04
    strategy:
      fail-fast: false
      matrix:
        image_name: [base-win32,base-win64,win32-nonfree,win64-nonfree,win32-nonfree-shared,win64-nonfree-shared]
    steps:
      - name: Prune untagged pkgs
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.dodosolsollalasol }}
          script: |
            const image_ls = await github.request("GET /user/packages/container/${{ matrix.image_name }}/versions", {
              per_page: 100
            })

            for (const version of image_ls.data)
              if (0 === version.metadata.container.tags.length) {
                console.log(`✂️ prune ${version.id}`);
                const prune_image = await github.request(`DELETE /user/packages/container/${{ matrix.image_name }}/versions/${version.id}`);
                switch (prune_image.status) {
                  case 204:
                    console.log("🎉 success");
                    break;
                  case 401:
                    console.log("🔐 requires authentication");
                    break;
                  case 403:
                    console.log("⛔ forbidden");
                    break;
                  case 404:
                    console.log("🤷‍♀️ package not found");
                    break;
                }
              }
