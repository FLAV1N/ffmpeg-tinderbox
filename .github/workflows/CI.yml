name: Windows Cross Compiled

on: [push, workflow_dispatch]

jobs:
  build_base:
    name: Build base image
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.dodosolsollalasol }}

      - name: Image Name
        id: imagename
        run: echo "::set-output name=name::ghcr.io/${GITHUB_ACTOR,,}/base:latest"

      - name: Build base image
        run: |
          docker build \
            --pull \
            --build-arg BUILDKIT_INLINE_CACHE=1 \
            --cache-from ${{ steps.imagename.outputs.name }} \
            --tag ${{ steps.imagename.outputs.name }} \
            images/base
        env:
          DOCKER_BUILDKIT: 1

      - name: Push base image
        run: docker push ${{ steps.imagename.outputs.name }}

  build_target_bases:
    name: Build target base image
    needs: build_base
    runs-on: ubuntu-20.04
    strategy:
      fail-fast: false
      matrix:
        target: [win32, win64]
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.dodosolsollalasol }}

      - name: Image Name
        id: imagename
        run: echo "::set-output name=name::ghcr.io/${GITHUB_ACTOR,,}/base-${{ matrix.target }}:latest"

      - name: Build target base image
        run: |
          docker build \
            --pull \
            --build-arg BUILDKIT_INLINE_CACHE=1 \
            --build-arg GH_OWNER=${GITHUB_ACTOR,,} \
            --cache-from ${{ steps.imagename.outputs.name }} \
            --tag ${{ steps.imagename.outputs.name }} \
            images/base-${{ matrix.target }}
        env:
          DOCKER_BUILDKIT: 1

      - name: Push target base image
        run: docker push ${{ steps.imagename.outputs.name }}

  build_targets:
    name: Build target-variant image
    needs: build_target_bases
    runs-on: ubuntu-20.04
    strategy:
      fail-fast: false
      matrix:
        target: [win32, win64]
        variant: [nonfree-shared]
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
        with:
          install: true

      - name: Generate Dockerfile
        run: ./generate.sh ${{ matrix.target }} ${{ matrix.variant }}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.dodosolsollalasol }}

      - name: Image Name
        id: imagename
        run: |
          IMG="ghcr.io/${GITHUB_ACTOR,,}/${{ matrix.target }}-${{ matrix.variant }}"
          echo "::set-output name=image::${IMG/ /-}:latest"
          echo "::set-output name=cache::${IMG/ /-}:cache"

      - name: Build variant image
        run: |
          docker build \
            --pull \
            --cache-to=type=registry,ref=${{ steps.imagename.outputs.cache }},mode=max \
            --cache-from=type=registry,ref=${{ steps.imagename.outputs.cache }} \
            -t ${{ steps.imagename.outputs.image }} \
            -o type=registry \
            .

  build_ffmpeg:
    name: Build ffmpeg
    needs: build_targets
    runs-on: ubuntu-20.04
    strategy:
      fail-fast: false
      matrix:
        target: [win32, win64]
        variant: [nonfree-shared]
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.dodosolsollalasol }}

      - name: Build ffmpeg
        run: ./build.sh ${{ matrix.target }} ${{ matrix.variant }}

      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: ffmpeg
          path: artifacts/*
